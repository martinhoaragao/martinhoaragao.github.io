# adapted from https://github.com/imathis/octopress/blob/master/Rakefile
# usage rake new_post['My New Post'] or rake new_post (defaults to "My New Post")
desc "Start a new post"
task :new, :title do |t, args|
 args.with_defaults(:title => 'My New Post')
 title = args.title
 filename = "_posts/#{Time.now.strftime('%Y-%m-%d')}-#{title.downcase.gsub(/&/,'and').gsub(/[,'":\?!\(\)\[\]]/,'').gsub(/[\W\.]/, '-').gsub(/-+$/,'')}.md"
 puts "Creating new post: #{filename}"
 open(filename, 'w') do |post|
   post.puts "---"
   post.puts "layout: post"
   post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
   post.puts "description: "
   post.puts "headline: "
   post.puts "modified: #{Time.now.strftime('%Y-%m-%d')}"
   post.puts "tags: []"
   post.puts "image: "
   post.puts "  feature: "
   post.puts "comments: true"
   post.puts "mathjax: "
   post.puts "---"
 end
end

desc "Start a new quote"
task :newquote, :title do |t, args|
 args.with_defaults(:title => 'My New quote')
 title = args.title
 filename = "_posts/#{Time.now.strftime('%Y-%m-%d')}-#{title.downcase.gsub(/&/,'and').gsub(/[,'":\?!\(\)\[\]]/,'').gsub(/[\W\.]/, '-').gsub(/-+$/,'')}.md"
 puts "Creating new post: #{filename}"
 open(filename, 'w') do |post|
   post.puts "---"
   post.puts "layout: post"
   post.puts "type: quote"
   post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
   post.puts "description: "
   post.puts "headline: "
   post.puts "modified: #{Time.now.strftime('%Y-%m-%d')}"
   post.puts "tags: []"
   post.puts "image: "
   post.puts "  feature: "
   post.puts "comments: false"
   post.puts "mathjax: "
   post.puts "---"
 end
end

desc "Start a new status"
task :newstatus, :title do |t, args|
 args.with_defaults(:title => 'My New Post')
 title = args.title
 filename = "_posts/#{Time.now.strftime('%Y-%m-%d')}-#{title.downcase.gsub(/&/,'and').gsub(/[,'":\?!\(\)\[\]]/,'').gsub(/[\W\.]/, '-').gsub(/-+$/,'')}.md"
 puts "Creating new post: #{filename}"
 open(filename, 'w') do |post|
   post.puts "---"
   post.puts "layout: post"
   post.puts "type: status"
   post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
   post.puts "description: "
   post.puts "headline: "
   post.puts "modified: #{Time.now.strftime('%Y-%m-%d')}"
   post.puts "tags: []"
   post.puts "image: "
   post.puts "  feature: "
   post.puts "comments: false"
   post.puts "mathjax: "
   post.puts "---"
 end
end

  # adapted from https://github.com/imathis/octopress/blob/master/Rakefile
# usage rake new_post['My New Post'] or rake new_post (defaults to "My New Post")
desc "Start a new page"
task :newpage, :title do |t, args|
 args.with_defaults(:title => 'My New page')
 title = args.title
 filename = "#{title.downcase.gsub(/&/,'and').gsub(/[,'":\?!\(\)\[\]]/,'').gsub(/[\W\.]/, '-').gsub(/-+$/,'')}.md"
 puts "Creating new page: #{filename}"
 open(filename, 'w') do |post|
   post.puts "---"
   post.puts "layout: page"
   post.puts "permalink: #{title.downcase.gsub(/&/,'and').gsub(/[,'":\?!\(\)\[\]]/,'').gsub(/[\W\.]/, '-').gsub(/-+$/,'')}/index.html"
   post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
   post.puts "description: "
   post.puts "headline: "
   post.puts "modified: #{Time.now.strftime('%Y-%m-%d')}"
   post.puts "tags: []"
   post.puts "image: "
   post.puts "  feature: "
   post.puts "comments: true"
   post.puts "mathjax: "
   post.puts "---"
 end
end

# Adapted from https://github.com/willkoehler/my_blog/blob/master/Rakefile
# usage JEKYLL_ENV=production bundle exec rake site:publish
require "rubygems"
require "tmpdir"
require "bundler/setup"
require "jekyll"

namespace :site do
  desc "Generate blog files"
  task :generate do
    Jekyll::Site.new(Jekyll.configuration({
      "source"      => ".",
      "destination" => "_site"
    })).process
  end

  desc "Generate and publish blog to master"
  task :publish => [:generate] do
    Dir.mktmpdir do |tmp|
      system "mv _site/* #{tmp}"
      if system "git show-ref --verify --quiet refs/heads/master"
        system "git checkout master"
      else
        system "git checkout --orphan master"   # create new branch with no history
      end
      next if $?.exitstatus != 0      # abort if checkout failed
      system "rm -rf *"
      system "mv #{tmp}/* ."
      message = "Site updated at #{Time.now.utc}"
      system "git add --all ."
      system "git commit -am #{message.shellescape}"
      system "git push origin master --force"
      system "git checkout dev"
      puts "Site published successfully."
    end
  end
end
